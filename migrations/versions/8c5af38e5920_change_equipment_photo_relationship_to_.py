"""Change equipment-photo relationship to many-to-many

Revision ID: 8c5af38e5920
Revises: a3a6d89ebe76
Create Date: 2025-06-13 16:40:19.260644

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8c5af38e5920'
down_revision = 'a3a6d89ebe76'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('equipment_photos_association',
    sa.Column('equipment_id', sa.Integer(), nullable=False),
    sa.Column('photo_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['photo_id'], ['equipment_photo.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('equipment_id', 'photo_id')
    )
    with op.batch_alter_table('equipment_photo', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['md5_hash'])
        batch_op.drop_constraint('equipment_photo_equipment_id_fkey', type_='foreignkey')
        batch_op.drop_column('equipment_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('equipment_photo', schema=None) as batch_op:
        batch_op.add_column(sa.Column('equipment_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('equipment_photo_equipment_id_fkey', 'equipment', ['equipment_id'], ['id'])
        batch_op.drop_constraint(None, type_='unique')

    op.drop_table('equipment_photos_association')
    # ### end Alembic commands ###
